#!/usr/bin/env python

# Utilizando o módulo Raspberry Pi, o relé e o sensor de temperatura/umidade DHT11, o grupo deve implementar um sistema 
# que atenda a todos os requisitos a seguir:
# Monitore a temperatura e a umidade.
# Envie os dois valores recebidos para um servidor de dados IoT na nuvem (thingspeak.com).
# Dica: para entender como enviar os dados dos sensores para o ThingSpeak, 
# acesse o material: Internet das Coisas: Raspberry Pi e ThingSpeak.
# Acione o relé caso ocorra qualquer uma das condições seguintes:
# Temperatura > 31 °C
# Umidade relativa do ar > 70%
# Caso nenhuma das condições esteja presente, o relé deve ser desligado.
# Observação: utilize a criatividade para alcançar as condições de teste apresentadas. Faz parte da atividade.

import urllib3
import time
import Adafruit_DHT as dht
import RPi.GPIO as gpio

gpio.setmode(gpio.BOARD)
gpio.setup(7, gpio.OUT)

teste = True
qtd = 0
rele=str("0")

while teste == True:
    qtd = qtd + 1

    umid, temp=dht.read_retry(dht.DHT11, 26)

    print("Teste efetuado número: {}".format(qtd))

    print("A temperatura é: {}".format(temp))
    print("A Umidade é: {}".format(umid))

    temp_str=str(temp)
    umid_str=str(umid)

    if float(temp) > 31 and float(umid) > 70:
        print("Aciona Relé")
        gpio.output(7, 1)
        rele="1"
    else:
        print("Desliga Relé")
        gpio.output(7, 0)
        rele="0"

    url1 = str("https://api.thingspeak.com/update?api_key=NWRY4FZILKGKR2HU&field1=")
    url2 = str("&field2=")
    url3 = str("&field3=")
    caminho = url1 + temp_str + url2 + umid_str + url3 + rele

    urllib3.PoolManager().request('GET', caminho)


    print("############################################")
    print("\n")
    time.sleep(20)
    
#Nome dos Aunos que participaram desse trabalho:
#GUSTAVO METZLER PONTES
#FÁBIO FERNANDES THEODORO
#RONNIE FELIPE CARVALHO MANCUZO
#SALOE BISPO POUBEL
#THIAGO JOAQUIM DOS SANTOS
